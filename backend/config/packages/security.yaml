security:

  role_hierarchy:
    ROLE_TENANT: ROLE_USER
    ROLE_LESSOR: ROLE_TENANT
    ROLE_ADMIN: [ ROLE_TENANT, ROLE_LESSOR ]

  password_hashers:
    App\Entity\User: 'auto'
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: 'auto'
      cost: 15

  enable_authenticator_manager: true

  providers:
    user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern: ^/api
      stateless: true
      entry_point: jwt
      json_login:
        check_path: api_login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      jwt: ~
      refresh_jwt:
        check_path: gesdinet_jwt_refresh_token

  access_control:
    - { path: ^/api$,             roles: PUBLIC_ACCESS }
    - { path: ^/api/auth/logout,  roles: ROLE_USER }
    - { path: ^/api/admin/,       roles: [ROLE_ADMIN, ROLE_TENANT] }
    - { path: ^/api/tenant/,      roles: ROLE_TENANT }
    - { path: ^/api/lessor/,      roles: ROLE_LESSOR }

